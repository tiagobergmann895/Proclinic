
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  role: 'role',
  passwordHash: 'passwordHash',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PatientScalarFieldEnum = {
  id: 'id',
  name: 'name',
  birthDate: 'birthDate',
  document: 'document',
  phone: 'phone',
  email: 'email',
  address: 'address',
  consentGivenAt: 'consentGivenAt',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.SupplierScalarFieldEnum = {
  id: 'id',
  name: 'name',
  cnpj: 'cnpj',
  contact: 'contact',
  email: 'email',
  phone: 'phone'
};

exports.Prisma.ItemScalarFieldEnum = {
  id: 'id',
  name: 'name',
  category: 'category',
  unit: 'unit',
  sku: 'sku',
  minStock: 'minStock',
  isControlled: 'isControlled',
  createdAt: 'createdAt'
};

exports.Prisma.ItemBatchScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  batchCode: 'batchCode',
  expirationDate: 'expirationDate',
  unitCost: 'unitCost',
  quantityAvailable: 'quantityAvailable',
  createdAt: 'createdAt'
};

exports.Prisma.InventoryMovementScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  batchId: 'batchId',
  type: 'type',
  quantity: 'quantity',
  unitCost: 'unitCost',
  reason: 'reason',
  linkedProcedureId: 'linkedProcedureId',
  performedByUserId: 'performedByUserId',
  createdAt: 'createdAt'
};

exports.Prisma.ProcedureTypeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  defaultDurationMin: 'defaultDurationMin',
  defaultItems: 'defaultItems'
};

exports.Prisma.ProcedureScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  professionalUserId: 'professionalUserId',
  procedureTypeId: 'procedureTypeId',
  scheduledAt: 'scheduledAt',
  startedAt: 'startedAt',
  finishedAt: 'finishedAt',
  room: 'room',
  status: 'status',
  notes: 'notes'
};

exports.Prisma.CostSheetScalarFieldEnum = {
  id: 'id',
  procedureId: 'procedureId',
  itemsCost: 'itemsCost',
  laborCost: 'laborCost',
  overheadCost: 'overheadCost',
  totalCost: 'totalCost',
  marginTarget: 'marginTarget',
  suggestedPrice: 'suggestedPrice',
  createdAt: 'createdAt'
};

exports.Prisma.PriceRuleScalarFieldEnum = {
  id: 'id',
  scope: 'scope',
  scopeId: 'scopeId',
  marginTarget: 'marginTarget',
  minMargin: 'minMargin',
  maxMargin: 'maxMargin',
  dynamicAdjustments: 'dynamicAdjustments'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  procedureId: 'procedureId',
  method: 'method',
  amount: 'amount',
  status: 'status',
  paidAt: 'paidAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  userName: 'userName',
  userRole: 'userRole',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  tenantId: 'tenantId',
  resourceType: 'resourceType',
  resourceId: 'resourceId',
  description: 'description',
  changes: 'changes',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  accessPurpose: 'accessPurpose',
  justification: 'justification',
  previousHash: 'previousHash',
  currentHash: 'currentHash',
  timestamp: 'timestamp'
};

exports.Prisma.ClinicalNoteScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  content: 'content',
  authorId: 'authorId',
  signed: 'signed',
  signedAt: 'signedAt'
};

exports.Prisma.ObservationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  code: 'code',
  value: 'value',
  unit: 'unit'
};

exports.Prisma.PrescriptionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  medication: 'medication',
  dosage: 'dosage',
  frequency: 'frequency'
};

exports.Prisma.DiagnosticReportScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  code: 'code',
  result: 'result'
};

exports.Prisma.AllergyIntoleranceScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  allergen: 'allergen',
  reaction: 'reaction',
  severity: 'severity'
};

exports.Prisma.DocumentReferenceScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  title: 'title',
  url: 'url',
  type: 'type'
};

exports.Prisma.ConditionScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  code: 'code',
  name: 'name',
  status: 'status'
};

exports.Prisma.ImmunizationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  patientId: 'patientId',
  vaccine: 'vaccine',
  date: 'date'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.Role = exports.$Enums.Role = {
  recepcao: 'recepcao',
  profissional: 'profissional',
  financeiro: 'financeiro',
  gestor: 'gestor'
};

exports.MovementType = exports.$Enums.MovementType = {
  ENTRY: 'ENTRY',
  EXIT: 'EXIT',
  ADJUST: 'ADJUST'
};

exports.ProcedureStatus = exports.$Enums.ProcedureStatus = {
  SCHEDULED: 'SCHEDULED',
  DONE: 'DONE',
  CANCELLED: 'CANCELLED'
};

exports.PriceScope = exports.$Enums.PriceScope = {
  PROCEDURE_TYPE: 'PROCEDURE_TYPE',
  GLOBAL: 'GLOBAL'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  PIX: 'PIX',
  CARD: 'CARD',
  BOLETO: 'BOLETO',
  CASH: 'CASH'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Patient: 'Patient',
  Supplier: 'Supplier',
  Item: 'Item',
  ItemBatch: 'ItemBatch',
  InventoryMovement: 'InventoryMovement',
  ProcedureType: 'ProcedureType',
  Procedure: 'Procedure',
  CostSheet: 'CostSheet',
  PriceRule: 'PriceRule',
  Payment: 'Payment',
  AuditLog: 'AuditLog',
  ClinicalNote: 'ClinicalNote',
  Observation: 'Observation',
  Prescription: 'Prescription',
  DiagnosticReport: 'DiagnosticReport',
  AllergyIntolerance: 'AllergyIntolerance',
  DocumentReference: 'DocumentReference',
  Condition: 'Condition',
  Immunization: 'Immunization'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\tiago\\OneDrive\\Área de Trabalho\\Proclinic\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\tiago\\OneDrive\\Área de Trabalho\\Proclinic\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                 String              @id @default(cuid())\n  name               String\n  email              String              @unique\n  role               Role\n  passwordHash       String\n  createdAt          DateTime            @default(now())\n  updatedAt          DateTime            @updatedAt\n  procedures         Procedure[]         @relation(\"ProfessionalProcedures\")\n  auditLogs          AuditLog[]\n  inventoryMovements InventoryMovement[]\n}\n\nenum Role {\n  recepcao\n  profissional\n  financeiro\n  gestor\n}\n\nmodel Patient {\n  id             String      @id @default(cuid())\n  name           String\n  birthDate      DateTime?\n  document       String?     @unique\n  phone          String?\n  email          String?\n  address        String?\n  consentGivenAt DateTime?\n  notes          String?\n  createdAt      DateTime    @default(now())\n  procedures     Procedure[]\n\n  conditions         Condition[]\n  allergies          AllergyIntolerance[]\n  medications        Prescription[]\n  immunizations      Immunization[]\n  clinicalNotes      ClinicalNote[]\n  observations       Observation[]\n  diagnosticReports  DiagnosticReport[]\n  documentReferences DocumentReference[]\n}\n\nmodel Supplier {\n  id      String  @id @default(cuid())\n  name    String\n  cnpj    String? @unique\n  contact String?\n  email   String?\n  phone   String?\n}\n\nmodel Item {\n  id           String              @id @default(cuid())\n  name         String\n  category     String?\n  unit         String\n  sku          String?             @unique\n  minStock     Float               @default(0)\n  isControlled Boolean             @default(false)\n  createdAt    DateTime            @default(now())\n  batches      ItemBatch[]\n  movements    InventoryMovement[]\n}\n\nmodel ItemBatch {\n  id                String              @id @default(cuid())\n  item              Item                @relation(fields: [itemId], references: [id])\n  itemId            String\n  batchCode         String\n  expirationDate    DateTime?\n  unitCost          Decimal             @db.Decimal(12, 2)\n  quantityAvailable Decimal             @db.Decimal(14, 3)\n  createdAt         DateTime            @default(now())\n  movements         InventoryMovement[]\n}\n\nenum MovementType {\n  ENTRY\n  EXIT\n  ADJUST\n}\n\nmodel InventoryMovement {\n  id                String       @id @default(cuid())\n  item              Item         @relation(fields: [itemId], references: [id])\n  itemId            String\n  batch             ItemBatch?   @relation(fields: [batchId], references: [id])\n  batchId           String?\n  type              MovementType\n  quantity          Decimal      @db.Decimal(14, 3)\n  unitCost          Decimal?     @db.Decimal(12, 2)\n  reason            String?\n  linkedProcedureId String?\n  performedBy       User         @relation(fields: [performedByUserId], references: [id])\n  performedByUserId String\n  createdAt         DateTime     @default(now())\n}\n\nmodel ProcedureType {\n  id                 String      @id @default(cuid())\n  name               String\n  description        String?\n  defaultDurationMin Int\n  defaultItems       Json\n  procedures         Procedure[]\n}\n\nenum ProcedureStatus {\n  SCHEDULED\n  DONE\n  CANCELLED\n}\n\nmodel Procedure {\n  id                 String          @id @default(cuid())\n  patient            Patient         @relation(fields: [patientId], references: [id])\n  patientId          String\n  professional       User            @relation(\"ProfessionalProcedures\", fields: [professionalUserId], references: [id])\n  professionalUserId String\n  procedureType      ProcedureType   @relation(fields: [procedureTypeId], references: [id])\n  procedureTypeId    String\n  scheduledAt        DateTime\n  startedAt          DateTime?\n  finishedAt         DateTime?\n  room               String?\n  status             ProcedureStatus @default(SCHEDULED)\n  notes              String?\n  costSheet          CostSheet?\n  payments           Payment[]\n}\n\nmodel CostSheet {\n  id             String    @id @default(cuid())\n  procedure      Procedure @relation(fields: [procedureId], references: [id])\n  procedureId    String    @unique\n  itemsCost      Decimal   @db.Decimal(12, 2)\n  laborCost      Decimal   @db.Decimal(12, 2)\n  overheadCost   Decimal   @db.Decimal(12, 2)\n  totalCost      Decimal   @db.Decimal(12, 2)\n  marginTarget   Decimal   @db.Decimal(5, 4)\n  suggestedPrice Decimal   @db.Decimal(12, 2)\n  createdAt      DateTime  @default(now())\n}\n\nenum PriceScope {\n  PROCEDURE_TYPE\n  GLOBAL\n}\n\nmodel PriceRule {\n  id                 String     @id @default(cuid())\n  scope              PriceScope\n  scopeId            String?\n  marginTarget       Decimal    @db.Decimal(5, 4)\n  minMargin          Decimal    @db.Decimal(5, 4)\n  maxMargin          Decimal    @db.Decimal(5, 4)\n  dynamicAdjustments Json?\n}\n\nenum PaymentMethod {\n  PIX\n  CARD\n  BOLETO\n  CASH\n}\n\nenum PaymentStatus {\n  PENDING\n  PAID\n  FAILED\n  REFUNDED\n}\n\nmodel Payment {\n  id          String        @id @default(cuid())\n  procedure   Procedure     @relation(fields: [procedureId], references: [id])\n  procedureId String\n  method      PaymentMethod\n  amount      Decimal       @db.Decimal(12, 2)\n  status      PaymentStatus @default(PENDING)\n  paidAt      DateTime?\n}\n\nmodel AuditLog {\n  id        String   @id @default(cuid())\n  user      User?    @relation(fields: [userId], references: [id])\n  userId    String?\n  userName  String?\n  userRole  String?\n  action    String\n  entity    String\n  entityId  String\n  metadata  Json?\n  createdAt DateTime @default(now())\n\n  tenantId      String?\n  resourceType  String?\n  resourceId    String?\n  description   String?\n  changes       Json?\n  ipAddress     String?\n  userAgent     String?\n  accessPurpose String?\n  justification String?\n  previousHash  String?\n  currentHash   String?\n  timestamp     DateTime @default(now())\n\n  @@index([tenantId])\n  @@index([entityId])\n}\n\nmodel ClinicalNote {\n  id        String    @id @default(cuid())\n  createdAt DateTime  @default(now())\n  patientId String\n  patient   Patient   @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  content   String    @db.Text\n  authorId  String\n  signed    Boolean   @default(false)\n  signedAt  DateTime?\n\n  @@index([patientId])\n}\n\nmodel Observation {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  code      String\n  value     String\n  unit      String?\n\n  @@index([patientId])\n}\n\nmodel Prescription {\n  id         String   @id @default(cuid())\n  createdAt  DateTime @default(now())\n  patientId  String\n  patient    Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  medication String\n  dosage     String\n  frequency  String\n\n  @@index([patientId])\n}\n\nmodel DiagnosticReport {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  code      String\n  result    String   @db.Text\n\n  @@index([patientId])\n}\n\nmodel AllergyIntolerance {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  allergen  String\n  reaction  String?\n  severity  String?\n\n  @@index([patientId])\n}\n\nmodel DocumentReference {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  title     String\n  url       String\n  type      String\n\n  @@index([patientId])\n}\n\nmodel Condition {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  code      String\n  name      String\n  status    String\n\n  @@index([patientId])\n}\n\nmodel Immunization {\n  id        String   @id @default(cuid())\n  createdAt DateTime @default(now())\n  patientId String\n  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)\n  vaccine   String\n  date      DateTime\n\n  @@index([patientId])\n}\n",
  "inlineSchemaHash": "673a4f2cd9b0f5960d7dd4195ad13f5b00897a4ebfa27517d220ca20cd5e14fd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"procedures\",\"kind\":\"object\",\"type\":\"Procedure\",\"relationName\":\"ProfessionalProcedures\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"inventoryMovements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToUser\"}],\"dbName\":null},\"Patient\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"document\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"consentGivenAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"procedures\",\"kind\":\"object\",\"type\":\"Procedure\",\"relationName\":\"PatientToProcedure\"},{\"name\":\"conditions\",\"kind\":\"object\",\"type\":\"Condition\",\"relationName\":\"ConditionToPatient\"},{\"name\":\"allergies\",\"kind\":\"object\",\"type\":\"AllergyIntolerance\",\"relationName\":\"AllergyIntoleranceToPatient\"},{\"name\":\"medications\",\"kind\":\"object\",\"type\":\"Prescription\",\"relationName\":\"PatientToPrescription\"},{\"name\":\"immunizations\",\"kind\":\"object\",\"type\":\"Immunization\",\"relationName\":\"ImmunizationToPatient\"},{\"name\":\"clinicalNotes\",\"kind\":\"object\",\"type\":\"ClinicalNote\",\"relationName\":\"ClinicalNoteToPatient\"},{\"name\":\"observations\",\"kind\":\"object\",\"type\":\"Observation\",\"relationName\":\"ObservationToPatient\"},{\"name\":\"diagnosticReports\",\"kind\":\"object\",\"type\":\"DiagnosticReport\",\"relationName\":\"DiagnosticReportToPatient\"},{\"name\":\"documentReferences\",\"kind\":\"object\",\"type\":\"DocumentReference\",\"relationName\":\"DocumentReferenceToPatient\"}],\"dbName\":null},\"Supplier\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cnpj\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contact\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"minStock\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isControlled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"batches\",\"kind\":\"object\",\"type\":\"ItemBatch\",\"relationName\":\"ItemToItemBatch\"},{\"name\":\"movements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToItem\"}],\"dbName\":null},\"ItemBatch\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToItemBatch\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batchCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expirationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"quantityAvailable\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"movements\",\"kind\":\"object\",\"type\":\"InventoryMovement\",\"relationName\":\"InventoryMovementToItemBatch\"}],\"dbName\":null},\"InventoryMovement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"InventoryMovementToItem\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"batch\",\"kind\":\"object\",\"type\":\"ItemBatch\",\"relationName\":\"InventoryMovementToItemBatch\"},{\"name\":\"batchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"MovementType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"unitCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedProcedureId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"performedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InventoryMovementToUser\"},{\"name\":\"performedByUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ProcedureType\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultDurationMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"defaultItems\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"procedures\",\"kind\":\"object\",\"type\":\"Procedure\",\"relationName\":\"ProcedureToProcedureType\"}],\"dbName\":null},\"Procedure\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToProcedure\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"professional\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfessionalProcedures\"},{\"name\":\"professionalUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"procedureType\",\"kind\":\"object\",\"type\":\"ProcedureType\",\"relationName\":\"ProcedureToProcedureType\"},{\"name\":\"procedureTypeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"finishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"room\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ProcedureStatus\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"costSheet\",\"kind\":\"object\",\"type\":\"CostSheet\",\"relationName\":\"CostSheetToProcedure\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToProcedure\"}],\"dbName\":null},\"CostSheet\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"procedure\",\"kind\":\"object\",\"type\":\"Procedure\",\"relationName\":\"CostSheetToProcedure\"},{\"name\":\"procedureId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemsCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"laborCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"overheadCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalCost\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"marginTarget\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"suggestedPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PriceRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"enum\",\"type\":\"PriceScope\"},{\"name\":\"scopeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marginTarget\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minMargin\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxMargin\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"dynamicAdjustments\",\"kind\":\"scalar\",\"type\":\"Json\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"procedure\",\"kind\":\"object\",\"type\":\"Procedure\",\"relationName\":\"PaymentToProcedure\"},{\"name\":\"procedureId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userRole\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"tenantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessPurpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"justification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"previousHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ClinicalNote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ClinicalNoteToPatient\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"signedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Observation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ObservationToPatient\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unit\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Prescription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"PatientToPrescription\"},{\"name\":\"medication\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dosage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"frequency\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"DiagnosticReport\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"DiagnosticReportToPatient\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"AllergyIntolerance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"AllergyIntoleranceToPatient\"},{\"name\":\"allergen\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reaction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"DocumentReference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"DocumentReferenceToPatient\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Condition\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ConditionToPatient\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Immunization\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"Patient\",\"relationName\":\"ImmunizationToPatient\"},{\"name\":\"vaccine\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

